Task:

- Parse legalruleml into some form of ast
- Populate an object model
- Query/operate on the object model

Object model:

We do not want a DOM; if we wanted that, we could just use libxml2 or similar with a validation pass with an xsd. Also, DOMs are pretty terrible to actually program against.

Defeasible logic is in a large sense firstorderizable, so we could write an encoding into SQL form. Then queries, alterations etc could just use SQL, and we could use a db connection for object model interrogation, stored programs for specific predefined 'object operations', and pipes/command line invocation for the initial population of a db.

We could then have options for how 'snowflaking'/'decomposition' is done, which would allow us to generate differrent kinds of object models pretty easily. Eg which normal form, do we reify implicit relationships, what kind of key structure do we use, how much denormalisation (if any), how much decomposition/compaction?
